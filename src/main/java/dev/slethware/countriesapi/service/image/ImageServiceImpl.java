package dev.slethware.countriesapi.service.image;

import dev.slethware.countriesapi.exception.ResourceNotFoundException;
import dev.slethware.countriesapi.models.entity.Country;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

@Slf4j
@Service
public class ImageServiceImpl implements ImageService {

    private static final String CACHE_DIR = "cache";
    private static final String IMAGE_FILE = "summary.png";
    private static final int IMAGE_WIDTH = 800;
    private static final int IMAGE_HEIGHT = 600;

    @Override
    public void generateSummaryImage(List<Country> topCountries, long totalCountries, LocalDateTime lastRefreshedAt) {
        try {
            log.info("Generating summary image for {} countries", totalCountries);

            // Create cache directory if it doesn't exist
            Path cacheDir = Paths.get(CACHE_DIR);
            if (!Files.exists(cacheDir)) {
                Files.createDirectories(cacheDir);
            }

            // Create buffered image
            BufferedImage image = new BufferedImage(IMAGE_WIDTH, IMAGE_HEIGHT, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = image.createGraphics();

            // Enable anti-aliasing for better text rendering
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);

            // Fill background with white
            g2d.setColor(Color.WHITE);
            g2d.fillRect(0, 0, IMAGE_WIDTH, IMAGE_HEIGHT);

            // Draw header background
            g2d.setColor(new Color(59, 130, 246)); // Blue color
            g2d.fillRect(0, 0, IMAGE_WIDTH, 100);

            // Draw title
            g2d.setColor(Color.WHITE);
            g2d.setFont(new Font("Arial", Font.BOLD, 32));
            g2d.drawString("Countries Summary Report", 40, 60);

            // Draw total countries
            g2d.setColor(Color.BLACK);
            g2d.setFont(new Font("Arial", Font.BOLD, 24));
            g2d.drawString("Total Countries: " + totalCountries, 40, 150);

            // Draw last refreshed timestamp - USE THE PASSED PARAMETER
            g2d.setFont(new Font("Arial", Font.PLAIN, 16));
            String timestamp = lastRefreshedAt != null
                    ? lastRefreshedAt.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME)
                    : "Never";
            g2d.drawString("Last Refreshed: " + timestamp, 40, 180);

            // Draw top 5 countries header
            g2d.setFont(new Font("Arial", Font.BOLD, 20));
            g2d.drawString("Top 5 Countries by Estimated GDP", 40, 230);

            // Draw horizontal line
            g2d.setColor(new Color(229, 231, 235)); // Light gray
            g2d.fillRect(40, 240, IMAGE_WIDTH - 80, 2);

            // Draw top 5 countries
            g2d.setColor(Color.BLACK);
            g2d.setFont(new Font("Arial", Font.PLAIN, 16));
            int yPosition = 280;
            int rank = 1;

            for (Country country : topCountries) {
                if (rank > 5) break;

                String countryName = country.getName();
                String gdp = String.format("$%.2f", country.getEstimatedGdp() != null ? country.getEstimatedGdp() : 0.0);

                // Draw rank and country name
                g2d.setFont(new Font("Arial", Font.BOLD, 16));
                g2d.drawString(rank + ". " + countryName, 60, yPosition);

                // Draw GDP value
                g2d.setFont(new Font("Arial", Font.PLAIN, 16));
                g2d.drawString("GDP: " + gdp, 80, yPosition + 20);

                yPosition += 60;
                rank++;
            }

            // Draw footer
            g2d.setColor(new Color(156, 163, 175)); // Gray color
            g2d.setFont(new Font("Arial", Font.ITALIC, 12));
            g2d.drawString("Generated by Countries FX API", 40, IMAGE_HEIGHT - 30);

            g2d.dispose();

            // Save image to file
            File outputFile = new File(CACHE_DIR + "/" + IMAGE_FILE);
            ImageIO.write(image, "png", outputFile);

            log.info("Summary image generated successfully at {}", outputFile.getAbsolutePath());

        } catch (IOException e) {
            log.error("Error generating summary image", e);
            throw new RuntimeException("Failed to generate summary image", e);
        }
    }

    @Override
    public byte[] getSummaryImage() {
        try {
            Path imagePath = Paths.get(CACHE_DIR, IMAGE_FILE);

            if (!Files.exists(imagePath)) {
                log.warn("Summary image not found at {}", imagePath);
                throw new ResourceNotFoundException("Summary image not found");
            }

            log.info("Reading summary image from {}", imagePath);
            return Files.readAllBytes(imagePath);

        } catch (IOException e) {
            log.error("Error reading summary image", e);
            throw new RuntimeException("Failed to read summary image", e);
        }
    }
}